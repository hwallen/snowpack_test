"RH" = "Relative humidity mean [%]",
"HS" = "Snow depth mean [cm]",
"VW" = "Wind speed mean [m/s]") %>%
mutate(timestamp = ymd_hms(paste0(Year, "-", m, "-", d,"-", Time)))
bind_rows(read_delim(files_meteo[2],
delim = ";",
na = c("", "NA", "-")) %>%
select(-`Observation station`) %>%
mutate_if(is.character, as.double),
read_delim(files_meteo[1],
delim = ";",
na = c("", "NA", "-")) %>%
select(-`Observation station`) %>%
mutate_if(is.character, as.double),
read_delim(files_meteo[3],
delim = ";",
na = c("", "NA", "-")) %>%
select(-`Observation station`) %>%
mutate_if(is.character, as.double)) %>%
rename("TA" = "Air temperature mean [°C]",
"RH" = "Relative humidity mean [%]",
"HS" = "Snow depth mean [cm]",
"VW" = "Wind speed mean [m/s]") %>%
mutate(timestamp = ymd_hms(paste0(Year, "-", Month, "-", Day,"-", Time)))
bind_rows(read_delim(files_meteo[2],
delim = ";",
na = c("", "NA", "-")) %>%
select(-`Observation station`) %>%
mutate_if(is.character, as.double),
read_delim(files_meteo[1],
delim = ";",
na = c("", "NA", "-")) %>%
select(-`Observation station`) %>%
mutate_if(is.character, as.double),
read_delim(files_meteo[3],
delim = ";",
na = c("", "NA", "-")) %>%
select(-`Observation station`) %>%
mutate_if(is.character, as.double))
bind_rows(read_delim(files_meteo[2],
delim = ";",
na = c("", "NA", "-")) %>%
select(-`Observation station`) %>%
mutate_if(is.character, as.double),
read_delim(files_meteo[1],
delim = ";",
na = c("", "NA", "-")) %>%
select(-`Observation station`) %>%
mutate_if(is.character, as.double),
read_delim(files_meteo[3],
delim = ";",
na = c("", "NA", "-")) %>%
select(-`Observation station`) %>%
mutate_if(is.character, as.double)) %>%
rename("TA" = "Air temperature mean [°C]",
"RH" = "Relative humidity mean [%]",
"HS" = "Snow depth mean [cm]",
"VW" = "Wind speed mean [m/s]") %>%
mutate(timestamp = ymd_hms(paste0(Year, "-", Month, "-", Day,"-", `Time [Local time]`))) %>%
select(timestamp, TA, RH, HS, VW)
bind_rows(read_delim(files_meteo[2],
delim = ";",
na = c("", "NA", "-")) %>%
select(-`Observation station`) %>%
mutate_if(is.character, as.double),
read_delim(files_meteo[1],
delim = ";",
na = c("", "NA", "-")) %>%
select(-`Observation station`) %>%
mutate_if(is.character, as.double),
read_delim(files_meteo[3],
delim = ";",
na = c("", "NA", "-")) %>%
select(-`Observation station`) %>%
mutate_if(is.character, as.double)) %>%
rename("TA" = "Air temperature mean [°C]",
"RH" = "Relative humidity mean [%]",
"HS" = "Snow depth mean [cm]",
"VW" = "Wind speed mean [m/s]") %>%
mutate(timestamp = ymd_hms(paste0(Year, "-", Month, "-", Day,"-", `Time [Local time]`))) %>%
select(timestamp, TA, RH, HS, VW) %>% map(summary)
bind_rows(read_delim(files_meteo[2],
delim = ";",
na = c("", "NA", "-")) %>%
select(-`Observation station`) %>%
mutate_if(is.character, as.double),
read_delim(files_meteo[1],
delim = ";",
na = c("", "NA", "-")) %>%
select(-`Observation station`) %>%
mutate_if(is.character, as.double),
read_delim(files_meteo[3],
delim = ";",
na = c("", "NA", "-")) %>%
select(-`Observation station`) %>%
mutate_if(is.character, as.double)) %>%
rename("TA" = "Air temperature mean [°C]",
"RH" = "Relative humidity mean [%]",
"HS" = "Snow depth mean [cm]",
"VW" = "Wind speed mean [m/s]") %>%
mutate(timestamp = ymd_hms(paste0(Year, "-", Month, "-", Day,"-", `Time [Local time]`))) %>%
select(timestamp, TA, RH, HS, VW) %>%
mutate(TA = TA + 273.15,
HS = HS/100,
RH = RH/100)
meteo2023_hourly <- bind_rows(read_delim(files_meteo[2],
delim = ";",
na = c("", "NA", "-")) %>%
select(-`Observation station`) %>%
mutate_if(is.character, as.double),
read_delim(files_meteo[1],
delim = ";",
na = c("", "NA", "-")) %>%
select(-`Observation station`) %>%
mutate_if(is.character, as.double),
read_delim(files_meteo[3],
delim = ";",
na = c("", "NA", "-")) %>%
select(-`Observation station`) %>%
mutate_if(is.character, as.double)) %>%
rename("TA" = "Air temperature mean [°C]",
"RH" = "Relative humidity mean [%]",
"HS" = "Snow depth mean [cm]",
"VW" = "Wind speed mean [m/s]") %>%
mutate(timestamp = ymd_hms(paste0(Year, "-", Month, "-", Day,"-", `Time [Local time]`))) %>%
select(timestamp, TA, RH, HS, VW) %>%
mutate(TA = TA + 273.15,
HS = HS/100,
RH = RH/100)
meteo2023_hourly %>%
select(-timestamp)
df_meteo_impute <- meteo2023_hourly %>%
select(-timestamp) %>%
as.data.frame()
meteo_imputed <- missForest(df_meteo_impute,
maxiter = 10,
verbose = T)$ximp %>%
as_tibble()
meteo_imputed
dfmeteo <- meteo_imputed
dfmeteo$timestamp <- meteo2023_hourly$timestamp
dfmeteo %>%
relocate(timestamp)
dfmeteo <- dfmeteo %>%
relocate(timestamp)
left_join(dfrad,
dfmeteo,
by = "timestamp")
left_join(dfrad,
dfmeteo,
by = "timestamp") %>%
relocate(timestamp, TA, RH, VW, ISWR, RSWR, ILWR, HS)
write_delim(df_final,
delim = ";",
file = here("snowpack", "meteo","meteo_tahtela.csv"))
df_final <- left_join(dfrad,
dfmeteo,
by = "timestamp") %>%
relocate(timestamp, TA, RH, VW, ISWR, RSWR, ILWR, HS)
write_delim(df_final,
delim = ";",
file = here("snowpack", "meteo","meteo_tahtela.csv"))
df_final %>% map(summary)
df_final
%>% slice(4340:4343)
df_final %>% slice(4340:4343)
df_final %>% slice(1:5)
packages <- c("tidyverse", "here", "terra", "lubridate", "sf", "janitor")
install.packages(setdiff(packages, rownames(installed.packages())))
lapply(packages, library, character.only = T)
rm(packages)
files_irradiance <- list.files(here("data", "weather", "tahtela", "irradiance"),
full.names = T,
pattern = "rad")
irra2023_hourly <- bind_rows(read_delim(files_irradiance[1],
delim = ";",
na = c("", "NA")) %>%
select(-`Observation station`) %>%
mutate_if(is.character, as.double),
read_delim(files_irradiance[2],
delim = ";",
na = c("", "NA")) %>%
select(-`Observation station`) %>%
mutate_if(is.character, as.double))  %>%
rename("ILWR" = "Long wave solar radiation mean [kJ/m2]",
"ISWR" = "Global radiation mean [W/m2]",
"RSWR" = "Reflected radiation mean [W/m2]",
"OLWR" = "Long wave outgoing solar radiation mean [kJ/m2]") %>%
mutate(timestamp = ymd_hms(paste0(Year, "-", Month, "-", Day,"-", `Time [Local time]`)),
ISWR = case_when(ISWR < 0 ~ 0, TRUE ~ ISWR),
RSWR = case_when(RSWR < 0 ~ 0, TRUE ~ RSWR)) %>% # Negative values to 0
select(timestamp, ILWR, RSWR, ISWR, OLWR)
# Impute missing irradiance data ------------------------------------------
df_rad_impute <- irra2023_hourly %>%
select(-timestamp) %>%
as.data.frame()
rad_imputed <- missForest(df_rad_impute,
maxiter = 10,
verbose = T)$ximp %>%
as_tibble()
library(missForest)
files_irradiance <- list.files(here("data", "weather", "tahtela", "irradiance"),
full.names = T,
pattern = "rad")
irra2023_hourly <- bind_rows(read_delim(files_irradiance[1],
delim = ";",
na = c("", "NA")) %>%
select(-`Observation station`) %>%
mutate_if(is.character, as.double),
read_delim(files_irradiance[2],
delim = ";",
na = c("", "NA")) %>%
select(-`Observation station`) %>%
mutate_if(is.character, as.double))  %>%
rename("ILWR" = "Long wave solar radiation mean [kJ/m2]",
"ISWR" = "Global radiation mean [W/m2]",
"RSWR" = "Reflected radiation mean [W/m2]",
"OLWR" = "Long wave outgoing solar radiation mean [kJ/m2]") %>%
mutate(timestamp = ymd_hms(paste0(Year, "-", Month, "-", Day,"-", `Time [Local time]`)),
ISWR = case_when(ISWR < 0 ~ 0, TRUE ~ ISWR),
RSWR = case_when(RSWR < 0 ~ 0, TRUE ~ RSWR)) %>% # Negative values to 0
select(timestamp, ILWR, RSWR, ISWR, OLWR)
# Impute missing irradiance data ------------------------------------------
df_rad_impute <- irra2023_hourly %>%
select(-timestamp) %>%
as.data.frame()
rad_imputed <- missForest(df_rad_impute,
maxiter = 10,
verbose = T)$ximp %>%
as_tibble()
dfrad <- rad_imputed
dfrad$timestamp <- irra2023_hourly$timestamp
df_rad <- dfrad %>%
relocate(timestamp)
# Meteo -data -------------------------------------------------------------
files_meteo <- list.files(here("data", "weather", "tahtela", "meteo"),
full.names = T,
pattern = "tah")
meteo2023_hourly <- bind_rows(read_delim(files_meteo[2],
delim = ";",
na = c("", "NA", "-")) %>%
select(-`Observation station`) %>%
mutate_if(is.character, as.double),
read_delim(files_meteo[1],
delim = ";",
na = c("", "NA", "-")) %>%
select(-`Observation station`) %>%
mutate_if(is.character, as.double),
read_delim(files_meteo[3],
delim = ";",
na = c("", "NA", "-")) %>%
select(-`Observation station`) %>%
mutate_if(is.character, as.double)) %>%
rename("TA" = "Air temperature mean [°C]",
"RH" = "Relative humidity mean [%]",
"HS" = "Snow depth mean [cm]",
"VW" = "Wind speed mean [m/s]") %>%
mutate(timestamp = ymd_hms(paste0(Year, "-", Month, "-", Day,"-", `Time [Local time]`))) %>%
select(timestamp, TA, RH, HS, VW) %>%
mutate(TA = TA + 273.15,
HS = HS/100,
RH = RH/100)
# Impute missing meteo data ------------------------------------------
df_meteo_impute <- meteo2023_hourly %>%
select(-timestamp) %>%
as.data.frame()
meteo_imputed <- missForest(df_meteo_impute,
maxiter = 10,
verbose = T)$ximp %>%
as_tibble()
dfmeteo <- meteo_imputed
dfmeteo$timestamp <- meteo2023_hourly$timestamp
dfmeteo <- dfmeteo %>%
relocate(timestamp)
df_final <- left_join(dfrad,
dfmeteo,
by = "timestamp") %>%
relocate(timestamp, TA, RH, VW, ISWR, RSWR, ILWR, HS)
df_final
df_final %>%
filter(timestamp > "2023-04-05")
df_final %>%
filter(timestamp > "2023-04-05") %>% ggplot(aes(x=timestamp, y = TA)) + geom_point()
df_final %>%
filter(timestamp > "2023-04-05") %>% ggplot(aes(x=timestamp, y = TA)) + geom_line()
df_final %>%
filter(timestamp > "2023-04-05") %>% ggplot(aes(x=timestamp, y = TA-273.15)) + geom_line()
df_final %>%
filter(timestamp > "2023-04-05")  %>%
ggplot(aes(x=timestamp, y = TA-273.15)) +
geom_line() +
labs(x = NULL,
y = "Mean temperature")
library(ggthemes)
df_final %>%
filter(timestamp > "2023-04-05")  %>%
ggplot(aes(x=timestamp, y = TA-273.15)) +
geom_line() +
labs(x = NULL,
y = "Mean temperature",
subtitle = "Mean temperature - April 6 ->") +
theme_clean()
df_final %>%
filter(timestamp > "2023-04-05")  %>%
ggplot(aes(x=timestamp, y = TA-273.15)) +
geom_line() +
labs(x = NULL,
y = "Mean temperature",
subtitle = "Mean temperature - April 6 ->") +
theme_clean() +
geom_hline(yintercept = 0, color = "orange")
df_final %>%
filter(timestamp > "2023-04-05")  %>%
ggplot(aes(x=timestamp, y = TA-273.15)) +
geom_line() +
labs(x = NULL,
y = "Mean temperature",
subtitle = "Mean temperature - April 6 ->") +
theme_clean() +
geom_hline(yintercept = 0, color = "orange", linetype = "dashed")
df_final %>%
filter(timestamp > "2023-04-05")  %>%
ggplot(aes(x=timestamp, y = TA-273.15)) +
geom_line() +
labs(x = NULL,
y = "Mean temperature",
subtitle = "Mean temperature - April 6 ->") +
theme_clean() +
geom_hline(yintercept = 0, color = "orange", linetype = "dashed", linewidth = 2)
df_final %>%
filter(timestamp > "2023-04-05")  %>%
ggplot(aes(x=timestamp, y = TA-273.15)) +
geom_line() +
labs(x = NULL,
y = "Mean temperature",
subtitle = "Mean temperature - April 6 ->") +
theme_clean() +
geom_hline(yintercept = 0, color = "orange", linetype = "dashed", linewidth = 1.5)
df_final %>%
filter(timestamp > "2023-04-05")  %>%
ggplot(aes(x=timestamp, y = TA-273.15)) +
geom_line() +
labs(x = NULL,
y = "Mean temperature",
subtitle = "Mean temperature - April 6 ->") +
theme_clean() +
geom_hline(yintercept = 0, color = "orange", linetype = "dashed", linewidth = 1.25)
Sys.setlocale("LC_ALL", "English")
df_final %>%
filter(timestamp > "2023-04-05")  %>%
ggplot(aes(x=timestamp, y = TA-273.15)) +
geom_line() +
labs(x = NULL,
y = "Mean temperature",
subtitle = "Mean temperature - April 6 ->") +
theme_clean() +
geom_hline(yintercept = 0, color = "orange", linetype = "dashed", linewidth = 1.25)
df_final
df_final %>%
filter(timestamp > "2023-04-05")  %>%
ggplot(aes(x=timestamp, y = HS)) +
geom_line()
df_final %>%
filter(timestamp > "2023-04-05")  %>%
ggplot(aes(x=timestamp, y = HS)) +
geom_line() +
labs(x = NULL,
y = "Mean snow depth",
subtitle = "Mean temperature - April 6 ->") +
theme_clean() +
geom_hline(yintercept = 0, color = "orange", linetype = "dashed", linewidth = 1.25)
df_final %>%
filter(timestamp > "2023-04-05")  %>%
ggplot(aes(x=timestamp, y = HS)) +
geom_line() +
labs(x = NULL,
y = "Mean snow depth",
subtitle = "Mean temperature - April 6 ->") +
theme_clean()
p2 <- df_final %>%
filter(timestamp > "2023-04-05")  %>%
ggplot(aes(x=timestamp, y = HS)) +
geom_line() +
labs(x = NULL,
y = "Mean snow depth",
subtitle = "Mean temperature - April 6 ->") +
theme_clean()
library(patchwork)
p1/p2
p1 <- df_final %>%
filter(timestamp > "2023-04-05")  %>%
ggplot(aes(x=timestamp, y = TA-273.15)) +
geom_line() +
labs(x = NULL,
y = "Mean temperature",
subtitle = "Mean temperature - April 6 ->") +
theme_clean() +
geom_hline(yintercept = 0, color = "orange", linetype = "dashed", linewidth = 1.25)
p1/p2
install.packages("sarp.snowprofile")
packages <- c("tidyverse", "here", "lubridate", "janitor", "sarp.snowprofile", "ggthemes")
install.packages(setdiff(packages, rownames(installed.packages())))
lapply(packages, library, character.only = T)
rm(packages)
list.files(here("snowpack", "output_snow"))
list.files(here("snowpack", "output_snow"),
full.names = T,
pattern = ".pro")
tiedostot <- list.files(here("snowpack", "output_snow"),
full.names = T,
pattern = ".pro")
snowprofilePro(tiedostot[24])
warnings()
?snowprofileLayers
?snowprofilePro
pro_tahtelaheight_2 <- snowprofilePro(tiedostot[24])
pro_tahtelaheight_2
pro_tahtelaheight_2 %>% summary()
pro_tahtelaheight_2$176
pro_tahtelaheight_2[[1]]
pro_tahtelaheight_2[[2]]
pro_tahtelaheight_2[[1]]
pro_tahtelaheight_2[[10]]
pro_tahtelaheight_2[[1000]]
str(pro_tahtelaheight_2)
pro_tahtelaheight_2[[1]]
pro_tahtelaheight_2[[1000]]
pro_tahtelaheight_2[[1000]]$layers
rbind(pro_tahtelaheight_2)
df_pro <- rbind(pro_tahtelaheight_2)
df_pro
df_pro %>% head()
rbind(pro_tahtelaheight_2) %>%
as_tibble()
rbind(pro_tahtelaheight_2) %>%
as_tibble() %>% map(summary)
library(openxlsx)
write.xlsx(df_pro,
here("output", "profile_example.xlsx"))
df_pro %>% slice(1:10)
df_pro <- rbind(pro_tahtelaheight_2) %>%
as_tibble()
df_pro %>% slice(1:10)
rbind(pro_tahtelaheight_2) %>%
as_tibble() %>%
mutate(station = "Sodankylä Tähtelä") %>%
select(-station_id)
df_pro %>% slice(1:10)
df_pro <- rbind(pro_tahtelaheight_2) %>%
as_tibble() %>%
mutate(station = "Sodankylä Tähtelä") %>%
select(-station_id)
df_pro %>% slice(1:10)
df_pro <- rbind(pro_tahtelaheight_2) %>%
as_tibble() %>%
mutate(station = "Sodankylä Tähtelä") %>%
select(datetime)
df_pro <- rbind(pro_tahtelaheight_2) %>%
as_tibble() %>%
mutate(station = "Sodankylä Tähtelä") %>%
select(-station_id)
df_pro %>% slice(1:10)
df_pro %>% slice(1:10) %>% select(datetime)
df_pro %>% slice(1:10) %>% select(datetime) %>% group_by(datetime) %>% mutate(testi = seq_along(datetime))
df_pro %>% slice(1:10) %>% select(datetime) %>% mutate(testi = seq_along(datetime))
df_pro %>% slice(1:10) %>% select(datetime) %>% group_by(datetime) %>% mutate(testi = seq_along(datetime))
df_pro <- rbind(pro_tahtelaheight_2) %>%
as_tibble() %>%
mutate(station = "Sodankylä Tähtelä") %>%
select(-station_id) %>%
group_by(datetime) %>%
mutate(layer_nro = seq_along(datetime))
df_pro %>% slice(1:20) %>% select(datetime, testi)
df_pro %>% slice(1:20) %>% select(datetime, layer_nro)
df_pro %>% slice(10:20) %>% select(datetime, layer_nro)
df_pro %>% slice(1:20) %>% select(datetime, layer_nro)
df_pro %>% slice(9:14) %>% select(datetime, layer_nro)
df_pro <- rbind(pro_tahtelaheight_2) %>%
as_tibble() %>%
mutate(station = "Sodankylä Tähtelä") %>%
select(-station_id) %>%
group_by(datetime) %>%
mutate(layer_nro = seq_along(datetime)) %>%
ungroup()
df_pro
df_pro %>% slice(1:10)
df_pro %>% slice(10:20)
df_pro %>% slice(10:20) %>% relocate(layer_nro)
df_pro %>% slice(100:110) %>% relocate(layer_nro)
df_pro %>% slice(200:210) %>% relocate(layer_nro)
df_pro <- rbind(pro_tahtelaheight_2) %>%
as_tibble() %>%
mutate(station = "Sodankylä Tähtelä") %>%
select(-station_id) %>%
group_by(datetime) %>%
mutate(layer_num = seq_along(datetime)) %>%
ungroup() %>%
relocate(station, datetime, date, layer_num)
write.xlsx(df_pro,
here("output", "profile_example.xlsx"))
plot(df_pro)
df_pro <- rbind(pro_tahtelaheight_2) %>%
as_tibble() %>%
mutate(station = "Sodankylä Tähtelä") %>%
select(-station_id) %>%
group_by(datetime) %>%
mutate(layer_num = seq_along(datetime)) %>%
ungroup() %>%
relocate(station, datetime, date, layer_num)
write.xlsx(df_pro,
here("output", "profile_example.xlsx"))
df_pro
